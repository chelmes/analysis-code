#!/usr/bin/python2
##!/hadron/knippsch/Enthought/Canopy_64bit/User/bin/python

import numpy as np

import analysis2 as ana

def main():
    prefix = "/home/chris/Work/data/"
    #prefix = "/hiskp2/correlators/A40.24_L24_T48_beta190_mul0040_musig150_mudel190_kappa1632700/ev120/liuming/"
    files = ["%s/pi_corr_p%d.dat" % (prefix, d) for d in range(3)]
    nboot = 1500
    datadir = "./data/"

    # prepare the fitting of data
    # 0 is single partivle correlation function
    # 1 is ratio fit
    # 2 is constant fit
    print("prepare fit")
    fitter = ana.LatticeFit(2, True)
    start = [0.3]
    #start = [1., 0.3]

    readsingle=True
    if readsingle == False:
        corr = ana.Correlators(files, matrix=False)
        corr.sym_and_boot(nboot)
        corr.save("%s/corr_pi.npy" % (datadir))
    else:
        corr = ana.Correlators.read("%s/corr_pi.npy" % (datadir))
    corr.mass()
    add = np.ones((1500,)) * corr.shape[1]

    print("fitting")
    fitres = fitter.fit(start, corr, [10, 16], corrid="epi")
    #fitres = fitter.fit(start, corr, [10, 16], corrid="epi", add=add)

    print("save")
    # save the fit result
    fitres.save("%s/fit_pi.npz" % (datadir))
    fitres.print_data(0)
    #fitres.print_data(1)

    # plot the result
    plotter = ana.LatticePlot("test.pdf")
    label = ["title", "x-axis", "y-axis", "pion"]
    plotter.plot(corr, fitres, fitter, label)

    #print(fitres.fit_ranges)
    #print(fitres.fit_ranges_shape)

if __name__ == '__main__':
    try:
        print("starting")
        main()
    except KeyboardInterrupt:
        pass
