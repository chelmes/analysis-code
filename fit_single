#!/hadron/knippsch/Enthought/Canopy_64bit/User/bin/python

import sys
import numpy as np

import analysis2 as ana

def main():
    # parse the input file
    if len(sys.argv) < 2:
        ens = ana.LatticeEnsemble.parse("kk_I1_TP0_A40.24.ini")
    else:
        ens = ana.LatticeEnsemble.parse(sys.argv[1])

    # read settings
    readsingledata = False 
    readsinglefit = False
    plotsingle = True

    # get data from input file
    lat = ens.name()
    nboot = ens.get_data("nboot")
    datadir = ens.get_data("datadir")
    plotdir = ens.get_data("plotdir")
    gmax = ens.get_data("gmax")
    d2 = ens.get_data("d2")
    t_mass = np.int_(ens.get_data("fitmass_pi"))
    if isinstance(t_mass[0],int):
      print(t_mass)
    min_size_mass = ens.get_data("tmin_mass_pi")
    try:
        debug = ens.get_data("debug")
    except KeyError:
        debug = 0
    T = ens.T()
    T2 = ens.T2()
    addT = np.ones((nboot,)) * T
    addT2 = np.ones((nboot,)) * T2

    # single particle correlator
    print("read single particle corrs")
    files = ["%s/k_charged_p0.dat" % (datadir) ]
    #files = ["%s/eta_charged_p0_old.dat" % datadir] 
    #files = ["%s/pi_corr_p0.dat" % datadir] 
    if readsingledata == False:
        picorr = ana.Correlators(files, matrix=False, conf_col=2)
        picorr.sym_and_boot(nboot,blocking=True,bl=8)
        #picorr.symmetrize()
        print(picorr.shape)
        #picorr.save("%s/corr_pi_%s.npy" % (datadir, lat))
    else:
        picorr = ana.Correlators.read("%s/%s/corr_k_%s.npz" % (datadir, lat, lat))
    print(picorr.data.shape)
    fit_single = ana.LatticeFit(0, dt_i= 1, dt_f=-1, dt=min_size_mass,
        correlated=True, debug=5)
    start_single = [1., 0.3]
    if readsinglefit == False:
        print("fitting")
        pifit = fit_single.fit(start_single, picorr, [t_mass],
            add=addT)
        #pifit.save("%s/fit_pi_%s.npz" % (datadir, lat))
    else:
        pifit = ana.FitResult.read("%s/fit_k_%s.npz" % (datadir, lat))
    pifit.print_data(1)
    pifit.print_details()
    pifit.calc_error()
    for i in zip(pifit.fit_ranges[0],pifit.weight[0]):
      print(i)

    # plot the result
    if plotsingle:
        print("plotting")
        plotter = ana.LatticePlot("%s/fit_k_%s.pdf" % (plotdir, lat))
        plotter.set_env(ylog=True)
        label = ["single particle", "t", "C(t)", "pion"]
        #plotter.set_env(ylim=[10,20],xlim=[30,35])
        plotter.plot(picorr, label, pifit, fit_single, add=addT, debug=4)
        plotter.new_file("%s/hist_fit_pi_%s.pdf" % (plotdir, lat))
        label = ["K energy", r'$E_\pi/a$', r'$E_\pi$']
        plotter.histogram(pifit, label, 1)
        plotter.set_env(ylog=False)
        plotter.new_file("%s/m_eff_k_%s.pdf" % (plotdir, lat))
        label = [r'$K$ Effective Mass', r'$t/a$', r'$M_{eff}$',r'$cosh(C)$']
        #plotter.set_env(ylim=[0.122,0.1255],xlim=[10,33])
        picorr.mass()
        plotter.plot(picorr,label)
        del plotter


if __name__ == '__main__':
    try:
        print("starting")
        main()
    except KeyboardInterrupt:
        pass
