#!/usr/bin/python
################################################################################
#
# Author: Christian Jost (jost@hiskp.uni-bonn.de)
# Date:   Februar 2015
#
# Copyright (C) 2015 Christian Jost
# 
# This program is free software: you can redistribute it and/or modify it under 
# the terms of the GNU General Public License as published by the Free Software 
# Foundation, either version 3 of the License, or (at your option) any later 
# version.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT 
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with tmLQCD. If not, see <http://www.gnu.org/licenses/>.
#
################################################################################
#
# Function: At the moment this is a test program, this file will change a lot
#
# For informations on input parameters see the description of the function.
#
################################################################################

import numpy as np
import input_output as io
import bootstrap
import corr_matrix as cm

def main():
    ## definition of some variables
    nbsamples = 100
    filepath="/hiskp2/correlators/A100.24_L24_T48_beta190_mul0100_musig150_mudel190_kappa1632550/ev120/liuming/pi_corr_p"
    #filepath="/home/chris/test/data/pi_corr_p"
    filestring = ["0", "1", "2", "3"]
    path1="/hiskp2/jost/correlationfunctions/liuming_pion/D15_new/pi_corr_p0_new.dat"

    try:
        ## testing of input and output
        # write in ascii test
        data = io.read_data_ascii(path1, (1,), verbose=True)
        io.write_data_ascii(data[0], "./mytest.dat", verbose=True)

        ## write data with error test
        io.write_data_w_err_ascii(data[0], data[2], "./mytest1.dat", verbose=True)
        io.write_data_w_err_ascii(data[0:2], data[2:4], "./mytest2.dat", verbose=True)

        ## read data with error test
        _data, _error = io.read_data_w_err_ascii("./mytest1.dat", (1,), (2,), verbose=True)
        print(np.array_equiv(_data[0,:,0], data[0]))
        print(np.array_equiv(_error[0,:,0], data[2]))
        _data1, _error1 = io.read_data_w_err_ascii("./mytest2.dat", (1,), (2,), verbose=True)
        print(np.array_equiv(_data1[:,:,0], data[0:2]))
        print(np.array_equiv(_error1[:,:,0], data[2:4]))

        # testing the bootstraping
        samples = bootstrap.sym_and_boot(data, nbsamples)
        print(samples[:,1])
        print(samples.shape)

        # testing the creation of a correlation function matrix
        corr_mat = cm.create_corr_matrix(nbsamples, filepath, filestring)
        T = corr_mat.shape[1]
        print(corr_mat.shape)
        print(corr_mat[:,0,0,0])
        print(T)
        for s in range(nbsamples):
            print("\ts = " + str(s))
            for t in range(int(T)):
                print("\tt = " + str(t))
                print(corr_mat[s,t])

        # testing the GEVP
        eigenvalues = cm.calculate_gevp(corr_mat)
        #print(eigenvalues)
        io.write_data(eigenvalues, "./test.dat")
    except KeyboardInterrupt:
        print("\nKeyboard Interrupt, exiting...")


# make this script importable, according to the Google Python Style Guide
if __name__ == '__main__':
    main()
