#!/usr/bin/python
################################################################################
#
# Author: Christian Jost (jost@hiskp.uni-bonn.de)
# Date:   Februar 2015
#
# Copyright (C) 2015 Christian Jost
# 
# This program is free software: you can redistribute it and/or modify it under 
# the terms of the GNU General Public License as published by the Free Software 
# Foundation, either version 3 of the License, or (at your option) any later 
# version.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT 
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with tmLQCD. If not, see <http://www.gnu.org/licenses/>.
#
################################################################################
#
# Function: At the moment this is a test program, this file will change a lot
#
# For informations on input parameters see the description of the function.
#
################################################################################

import os
import numpy as np

import analysis as ana

def main():
    # needed variables
    #inputpath="/hiskp2/jost/correlationfunctions/liuming_pion/D15_new/sum/pi_corr_p0.conf"
    #outputpath="/hiskp2/jost/correlationfunctions/liuming_pion/D15_new/pi_corr_p0"
    #inputpath="/hiskp2/jost/correlationfunctions/liuming_pion/D15_6rnd/sum/"
    #outputpath="/hiskp2/jost/correlationfunctions/liuming_pion/D15_6rnd/"
    inputpath="/hiskp2/jost/correlationfunctions/liuming_pion/D30/sum/"
    outputpath="/hiskp2/jost/correlationfunctions/liuming_pion/D30/"
    filelist = ["pi_corr_p%d" % (x) for x in xrange(4)]
    filelist += ["pipi_pipi_A1_corr_TP0_%02d" % (x) for x in [00, 01, 02, 10, 11, 12, 20, 21, 22]]
    filelist += ["pipi_pipi_A1_corr_TP1_%02d" % (x) for x in [00, 01, 10, 11]]
    filelist += ["pipi_pipi_A1_corr_TP2_%02d" % (x) for x in [00, 01, 10, 11]]
    filelist += ["pipi_pipi_A1_corr_TP3_%02d" % (x) for x in [00, 01, 10, 11]]
    #inputpath="/hiskp2/helmes/contractions/A60.24/k-k_test_C4/strange_0225/merged/"
    #outputpath="/hiskp2/helmes/contractions/A60.24/k-k_test_C4/strange_0225/merged/"
    #filelist = ["C2_k"]
    #filelist += ["C4_%d" % (x) for x in [1,2,3,4]]
    #for p in xrange(4):
    #    filelist += ["pipi_pipi_A1_corr_TP%01d_%02d" % (p,x) for x in 
    #                 [00, 01, 02, 10, 11, 12, 20, 21, 22]]
    suffix=".dat"
    #missing = [292, 328, 388, 444, 516, 524, 556]
    #missing += [40, 48, 56, 64, 80, 88]
    missing = [328, 336]
    inputlist = []
    for i in range(312, 381, 4):
        if i in missing:
            continue
        inputlist.append(".conf%04d" % i)
    #for i in range(90, 160, 4):
    #    if i in missing:
    #        continue
    #    inputlist.append(".conf%04d" % i)
    #inputlist = []
    #for i in range(600, 3104, 8):
    #    if i in missing:
    #        continue
    #    inputlist.append("_c%04d" % i)
    #print(inputpath)
    #print(outputpath)
    #print(filelist)
    print(len(filelist))
    print(len(inputlist))
    #return

    for d in filelist:
        # read in data
        # read in the first file to create all variables
        corrs = ana.read_data_ascii( "".join((inputpath, d, inputlist[0], suffix)) )
        #corrs = ana.read_data_ascii( "".join((inputpath, d, inputlist[0], suffix)),(0,) )
        _nbcfg = corrs.shape[0]
        _t = corrs.shape[1]
        # loop over the remaining files and append to the first data set
        for _i in inputlist[1:]:
            # read in file
            _ctmp = ana.read_data_ascii("".join((inputpath, d, _i, suffix)))
            #_ctmp = ana.read_data_ascii("".join((inputpath, d, _i, suffix)), (0,))
            _nbtmp = _ctmp.shape[0]
            _ttmp = _ctmp.shape[1]
            # check whether time extend is the same
            if _t != _ttmp:
                print("ERROR: the time extend of two files is not the same. Returning...")
                return
            # append the correlation function
            #corrs = np.append(corrs, _ctmp)
            corrs = np.concatenate((corrs, _ctmp))
            # add number of configurations
            _nbcfg += _nbtmp

        # print to file
        ana.write_data_ascii(corrs, "".join((outputpath, d, suffix)), verbose=False)
        #print(corrs)
        print("".join((outputpath, d, suffix)))
        print(corrs.shape)

# make this script importable, according to the Google Python Style Guide
if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("\nKeyboard Interrupt, exiting...")
