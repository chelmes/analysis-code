#!/hadron/knippsch/Enthought/Canopy_64bit/User/bin/python

# Script that plots the pion and kaon correlator in a short way

import sys
import numpy as np
import itertools

import analysis2 as ana
import standard_analyses as std_ana
    

def main():
    # parse the input file
    if len(sys.argv) < 2:
        ens = ana.LatticeEnsemble.parse("kk_I1_TP0_A40.24.ini")
    else:
        ens = ana.LatticeEnsemble.parse(sys.argv[1])
    # define filenames depending on os flag
    # get data from input file
    prefix = ens.get_data("path")
    lat = ens.name()
    nboot = ens.get_data("nboot")
    datadir = ens.get_data("datadir")
    datadir_pi = ens.get_data("datadir_pi")
    plotdir = ens.get_data("plotdir")
    t_mass_pi = np.int_(ens.get_data("fitmass_pi"))
    t_mass_k = np.int_(ens.get_data("fitmass_k"))
    t_etot = np.int_(ens.get_data("fitetot"))
    min_size_mass_pi = ens.get_data("tmin_mass_pi")
    min_size_mass_k = ens.get_data("tmin_mass_k")
    min_size_etot = ens.get_data("tmin_etot")
    try:
        debug = ens.get_data("debug")
    except KeyError:
        debug = 0
    L = ens.L()
    T = ens.T()
    T2 = ens.T2()
    addT = np.ones((nboot,)) * T
    addT2 = np.ones((nboot,)) * T2

# single pion
    dnames=[datadir_pi,plotdir]
    fnames=["pi_charged_p0","pi_unit"]
    pi_corr, pi_fitres = std_ana.analyse_two_point_corr(dnames,fnames,lat,9,
                                                        min_size_mass_pi,
                                                        t_mass_pi,addT,nboot,read=True)

# single kaon
    dnames=[datadir,plotdir]
    fnames=["k_charged_p0","k_unit"]
    k_corr, k_fitres = std_ana.analyse_two_point_corr(dnames,fnames,lat,9,
                                                      min_size_mass_k,
                                                      t_mass_k,addT,nboot,read=True)

# 4 point function
    # dnames are same as for kaon
    fnames=["pik_charged_A1_TP0_00","pik_weight_unit"]
    masses = pi_fitres.comb_fitres(k_fitres,1)
    diff_e = k_fitres.singularize().data[0][:,1,0] - pi_fitres.singularize().data[0][:,1,0]
    c_55_corr, c_55_fitres = std_ana.analyse_four_point_corr(dnames,fnames,lat,8,
                                                     min_size_etot,t_etot,addT,
                                                     nboot,weight=diff_e,
                                                     oldfitres=masses)

if __name__ == '__main__':
    try:
        print("starting")
        main()
    except KeyboardInterrupt:
        pass
