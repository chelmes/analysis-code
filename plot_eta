#!/hadron/knippsch/Enthought/Canopy_64bit/User/bin/python

import numpy as np
import matplotlib
matplotlib.use('Agg') # has to be imported before the next lines
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages

import analysis2 as ana

def sq(data, error, nsamples=100):
    tmp1 = []
    tmp1e = []
    for da, er in zip(data, error):
        np.random.seed(1228)
        tmp = er*np.random.randn(nsamples)+da
        tmp = np.square(tmp)
        x = ana.mean_std(tmp)
        tmp1.append(x[0])
        tmp1e.append(x[1])
    return np.asarray(tmp1).flatten(), np.asarray(tmp1e)

def main():
    fx = np.asarray([0.016, 0.018, 0.021])
    fe = [2.844490e-01, 2.929924e-01, 3.045930e-01]
    dfe = [1.629552e-03, 1.465970e-03, 1.256571e-03]
    fep = [4.295632e-01, 4.318940e-01, 4.362979e-01]
    dfep = [7.499014e-03, 7.032402e-03, 6.104962e-03]

    ax = np.asarray([0.016, 0.01861, 0.021])
    ae = [0.293, 0.314, 0.314]
    dae = [0.004, 0.005, 0.008]
    aep = [0.445, 0.410, 0.418]
    daep = [0.084, 0.079, 0.072]

    ae1 = [0.284, 0.295, 0.303]
    dae1 = [0.001, 0.002, 0.003]
    aep1 = [0.424, 0.417, 0.417]
    daep1 = [0.036, 0.033, 0.029]

    plotter = ana.LatticePlot("./plot_eta_sq.pdf")

    fe, dfe = sq(fe, dfe)
    fep, dfep = sq(fep, dfep)
    ae, dae = sq(ae, dae)
    aep, daep = sq(aep, daep)
    ae1, dae1 = sq(ae1, dae1)
    aep1, daep1 = sq(aep1, daep1)

    print(fx)
    print(fe)
    print(dfe)
    plt.errorbar(fx, fe, yerr=dfe, fmt="sb", label="$\eta$, Falk")
    plt.errorbar(fx, fep, yerr=dfep, fmt="sg", label="$\eta'$, Falk")
    plt.errorbar(ax+0.0001, ae, yerr=dae, fmt="ob", label="$\eta$, Chris I")
    plt.errorbar(ax+0.0001, aep, yerr=daep, fmt="og", label="$\eta'$, Chris I")
    plt.errorbar(ax+0.0002, ae1, yerr=dae1, fmt="^b", label="$\eta$, Chris II")
    plt.errorbar(ax+0.0002, aep1, yerr=daep1, fmt="^g", label="$\eta'$, Chris II")

    plotter.set_title("", ["$\mu_s$", "$M^2$"])
    plt.xlim([0.015, 0.022])

    artist1 = [plt.Line2D((0,1),(0,0), color='b'),
        plt.Line2D((0,1),(0,0), color='g')]
    label1 = ["$\eta$", "$\eta'$"]
    artist2 = [plt.Line2D((0,1),(0,0), color='k', marker='s', linestyle=''),
        plt.Line2D((0,1),(0,0), color='k', marker='o', linestyle=''),
        plt.Line2D((0,1),(0,0), color='k', marker='^', linestyle='')]
    label2 = ["Falk", "Chris I", "Chris II"]
    plt.legend(artist1+artist2, label1+label2, numpoints=1, loc=0, framealpha=0.6, fontsize="small")
    plt.grid(True)
    plotter.save()

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        pass
