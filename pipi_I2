#!/usr/bin/python2
#!/hadron/knippsch/Enthought/Canopy_64bit/User/bin/python
#!/usr/bin/python2

import sys
import numpy as np

import analysis2 as ana

def main():
    # parse the input file
    if len(sys.argv) < 2:
        ens = ana.LatticeEnsemble.parse("A40.24.ini")
    else:
        ens = ana.LatticeEnsemble.parse(sys.argv[1])

    # read settings

    # get data from input file
    lat = ens.name()
    datadir = ens.get_data("datadir")
    plotdir = ens.get_data("plotdir")
    d2 = ens.get_data("d2")

    # single particle correlator
    print("read single particle corrs")
    picorr = ana.Correlators.read("%s/corr_pi_%s.npy" % (datadir, lat))
    pifit = ana.FitResult.read("%s/fit_pi_%s.npz" % (datadir, lat))
    pifit.print_data(1)
    print("pi best fit")
    print(pifit.weight[1][0][29])
    print(pifit.data[0][0,:,29])

    # two particle correlator
    print("\n\nread ratio")
    #ratiocorr = ana.Correlators.read("%s/ratio_pipi_TP%d_%s.npy" % (datadir, d2, lat))
    #ratiofit = ana.FitResult.read("%s/fit_pipi_ratio_TP%d_%s.npz" % (datadir, d2, lat))
    pipifit = ana.FitResult.read("%s/fit_pipi_TP%d_%s.npz" % (datadir, d2, lat))
    #ratiofit.print_data(0)
    #ratiofit.print_data(1)
    pipifit.print_data(0)
    pipifit.print_data(1)
    pipifit.print_data(2)
    #print(ratiofit.weight[1])
    #print("dE best fits")
    #print(ratiofit.weight[1][0][29])
    #print(ratiofit.data[0][0,:,29])
    #print(ratiofit.weight[1][1][29])
    #print(ratiofit.data[1][0,:,29])
    #print(ratiofit.weight[1][2][29])
    #print(ratiofit.data[2][0,:,29])

    print("calculate scattering length")
    #a_pipi = ratiofit.calc_scattering_length(pifit, 1, 1, L=ens.L(), isratio=True)
    #a_pipi = pipifit.calc_scattering_length(pifit, 1, 1, L=ens.L(), isratio=False)
    #cotd = ratiofit.calc_cot_delta(pifit, 1, 1, L=ens.L(), isratio=True)

if __name__ == '__main__':
    try:
        print("starting")
        main()
    except KeyboardInterrupt:
        pass
