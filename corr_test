#!/hadron/knippsch/Enthought/Canopy_64bit/User/bin/python

import sys
import numpy as np

import analysis2 as ana

def main():
    # parse the input file
    if len(sys.argv) < 2:
        ens = ana.LatticeEnsemble.parse("kk_I1_TP0_A40.24.ini")
    else:
        ens = ana.LatticeEnsemble.parse(sys.argv[1])

    # read settings
    readsingledata = False 
    readsinglefit = False
    plotsingle = False
    readtwodata = False
    readtwofit = False
    plottwo = True

    # get data from input file
    prefix = ens.get_data("path")
    print prefix
    lat = ens.name()
    nboot = ens.get_data("nboot")
    datadir = ens.get_data("datadir")
    plotdir = ens.get_data("plotdir")
    gmax = ens.get_data("gmax")
    d2 = ens.get_data("d2")
    try:
        debug = ens.get_data("debug")
    except KeyError:
        debug = 0
    T = ens.T()
    T2 = ens.T2()
    addT = np.ones((nboot,)) * T
    addT2 = np.ones((nboot,)) * T2
    ts = 0



    # two particle correlator
    print("read two particle corrs")
    files = ["%s/kk_charged_A1_TP%d_%d%d.dat" % (datadir, d2, i, j) for i in\
        range(gmax+1) for j in range(gmax+1)]
    print files
    if readtwodata == False:
        kkcorr = ana.Correlators(files, matrix=False)

        popped = kkcorr.omit([9e+5,2e+6])
        kkhist = kkcorr.hist(ts)
        print(popped)
        plotter = ana.LatticePlot("%s/hist_ts%d_kk.pdf" % (plotdir,ts))
        label = ["4pt history","cfg","C(%d)"%ts, "data"]
        plotter.set_title(label[0],label[1:3])
        plotter.set_env()
        plotter.plot_data(np.arange(kkhist.shape[0]),kkhist,np.zeros_like(kkhist),label[-1])
        plotter.save()

        del plotter
        kkcorr.sym_and_boot(nboot)
        if d2 != 0:
            dE = pifit.error[1][0][1] - pifit.error[1][0][0]
            #print(dE)
            kkcorr.shift(1, dE=dE)
        else:
            #kkcorr.shift(1)
            pass
        kkcorr.save("%s/corr_kk_TP%d_%s.npy" % (datadir, d2, lat))
    else:
        kkcorr = ana.Correlators.read("%s/corr_kk_TP%d_%s.npy" % (datadir, d2, lat))

    # single particle correlator
    print("read single particle corrs")
    files = ["%s/k_charged_p%d.dat" % (datadir, d) for d in range(1)]
    if readsingledata == False:
        kcorr = ana.Correlators(files, matrix=False)
        if isinstance(popped, list):
          kcorr.omit(popped)
        khist = kcorr.hist(ts)
        plotter = ana.LatticePlot("%s/hist_ts%d_k.pdf" % (plotdir,ts))
        label = ["2pt history","cfg","C(%d)" % ts, "data"]
        plotter.set_title(label[0],label[1:3])
        plotter.set_env()
        plotter.plot_data(np.arange(khist.shape[0]),khist,np.zeros_like(khist),label[-1])
        plotter.save()

        kcorr.sym_and_boot(nboot)
        kcorr.save("%s/corr_k_%s.npy" % (datadir, lat))
    else:
        kcorr = ana.Correlators.read("%s/corr_k_%s.npy" % (datadir, lat))

        #ratio = kkcorr.ratio(kcorr, ratio=2 )

if __name__ == '__main__':
    try:
        print("starting")
        main()
    except KeyboardInterrupt:
        pass
