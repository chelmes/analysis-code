#!/usr/bin/python
################################################################################
#
# Author: Christian Jost (jost@hiskp.uni-bonn.de)
# Date:   Februar 2015
#
# Copyright (C) 2015 Christian Jost
# 
# This program is free software: you can redistribute it and/or modify it under 
# the terms of the GNU General Public License as published by the Free Software 
# Foundation, either version 3 of the License, or (at your option) any later 
# version.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT 
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with tmLQCD. If not, see <http://www.gnu.org/licenses/>.
#
################################################################################
#
# Function: At the moment this is a test program, this file will change a lot
#
# For informations on input parameters see the description of the function.
#
################################################################################
import itertools as it
import analysis2 as ana
def main():
    ## definition of some variables
    filepath="/hiskp4/helmes/analysis/tests/derivative_operators/pi_one_der/data/A40.24/unsmeared_gauges"
    plotpath="/hiskp4/helmes/analysis/tests/derivative_operators/pi_one_der/plots/A40.24/unsmeared_gauges"
    #filepath="/home/chris/test/data/pi_corr_p"
    filestring = ['0','1' ,'2' ,'3' ,'4' ,'5' ,'6' ,'7' ,'8']
    names = ["%s/C2+_corr%s.dat"%(filepath,i) for i in filestring]
    corr_mat = ana.Correlators(names,matrix=True,conf_col=3)
    corr_mat.sym_and_boot(100)
    for i, j in it.product((0,1,2),repeat=2):
        print("\n%d\t%d :" %(i,j))
        print(corr_mat.data[0,:,i,j])
    
    # testing the GEVP
    corr_mat.gevp(2)
    print(corr_mat.data)
    corr_mat.mass()
    print(corr_mat.data)
    #eigenvalues = ana.gevp.calculate_gevp(corr_mat.data,t0=2)
    #io.write_data(eigenvalues, "./test.dat")
    corr_plot = ana.LatticePlot(plotpath+"/gevp_matrix.pdf")
    corr_plot.set_env(ylog=False, grid=False,title = True)
    label = ["Matrix entry of gevp", "t","M_eff(t)","data"]
    corr_plot.plot_matrix(corr_mat,label,ploterror=True)
    del corr_plot


# make this script importable, according to the Google Python Style Guide
if __name__ == '__main__':
    main()
